// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
// import platform specific firebase api keys and other configs
import 'package:medico_ai/config/firebase/firebase_configs.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: WebConfig.apiKey,
    appId: WebConfig.appId,
    messagingSenderId: WebConfig.messagingSenderId,
    projectId: WebConfig.projectId,
    authDomain: WebConfig.authDomain,
    storageBucket: WebConfig.storageBucket,
    measurementId: WebConfig.measurementId,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: AndroidConfig.apiKey,
    appId: AndroidConfig.appId,
    messagingSenderId: AndroidConfig.messagingSenderId,
    projectId: AndroidConfig.projectId,
    storageBucket: AndroidConfig.storageBucket,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: IosConfig.apiKey,
    appId: IosConfig.appId,
    messagingSenderId: IosConfig.messagingSenderId,
    projectId: IosConfig.projectId,
    storageBucket: IosConfig.storageBucket,
    iosBundleId: IosConfig.iosBundleId,
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: MacosConfig.apiKey,
    appId: MacosConfig.appId,
    messagingSenderId: MacosConfig.messagingSenderId,
    projectId: MacosConfig.projectId,
    storageBucket: MacosConfig.storageBucket,
    iosBundleId: MacosConfig.iosBundleId,
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: WindowsConfig.apiKey,
    appId: WindowsConfig.appId,
    messagingSenderId: WindowsConfig.messagingSenderId,
    projectId: WindowsConfig.projectId,
    authDomain: WindowsConfig.authDomain,
    storageBucket: WindowsConfig.storageBucket,
    measurementId: WindowsConfig.measurementId,
  );
}
